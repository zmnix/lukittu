-- CreateEnum
CREATE TYPE "AuditLogSource" AS ENUM ('DASHBOARD', 'API_KEY', 'STRIPE_INTEGRATION', 'DISCORD_INTEGRATION', 'BUILT_BY_BIT_INTEGRATION', 'POLYMART_INTEGRATION');

-- AlterEnum
BEGIN;
-- Create the new enum with all values including the renamed ones
CREATE TYPE "AuditLogAction_new" AS ENUM ('LEAVE_TEAM', 'CREATE_TEAM', 'UPDATE_TEAM', 'DELETE_TEAM', 'TRANSFER_TEAM_OWNERSHIP', 'CREATE_LICENSE', 'UPDATE_LICENSE', 'DELETE_LICENSE', 'CREATE_CUSTOMER', 'UPDATE_CUSTOMER', 'DELETE_CUSTOMER', 'CREATE_PRODUCT', 'UPDATE_PRODUCT', 'DELETE_PRODUCT', 'INVITE_MEMBER', 'KICK_MEMBER', 'CANCEL_INVITATION', 'ACCEPT_INVITATION', 'RESET_PUBLIC_KEY', 'UPDATE_TEAM_SETTINGS', 'UPDATE_TEAM_PICTURE', 'DELETE_TEAM_PICTURE', 'CREATE_BLACKLIST', 'DELETE_BLACKLIST', 'UPDATE_BLACKLIST', 'CREATE_API_KEY', 'DELETE_API_KEY', 'SET_STRIPE_INTEGRATION', 'DELETE_STRIPE_INTEGRATION', 'SET_DISCORD_INTEGRATION', 'DELETE_DISCORD_INTEGRATION', 'CREATE_RELEASE', 'UPDATE_RELEASE', 'DELETE_RELEASE', 'SET_LATEST_RELEASE', 'UPDATE_EMAIL_PICTURE', 'DELETE_EMAIL_PICTURE', 'SET_BUILT_BY_BIT_INTEGRATION', 'DELETE_BUILT_BY_BIT_INTEGRATION', 'SET_POLYMART_INTEGRATION', 'DELETE_POLYMART_INTEGRATION', 'CREATE_BRANCH', 'UPDATE_BRANCH', 'DELETE_BRANCH', 'SET_BUILT_BY_BIT_PLACEHOLDER', 'SET_POLYMART_PLACEHOLDER', 'SET_BUILD_BY_BIT_INTEGRATION', 'DELETE_BUILD_BY_BIT_INTEGRATION');

-- Convert to the new enum type, with proper casting
ALTER TABLE "AuditLog" ALTER COLUMN "action" TYPE "AuditLogAction_new" USING ("action"::text::"AuditLogAction_new");

-- Now we can update the renamed values
UPDATE "AuditLog" SET "action" = 'SET_BUILT_BY_BIT_INTEGRATION' WHERE "action" = 'SET_BUILD_BY_BIT_INTEGRATION';
UPDATE "AuditLog" SET "action" = 'DELETE_BUILT_BY_BIT_INTEGRATION' WHERE "action" = 'DELETE_BUILD_BY_BIT_INTEGRATION';

-- Create a final clean enum without the temporary misspelled values
CREATE TYPE "AuditLogAction_final" AS ENUM ('LEAVE_TEAM', 'CREATE_TEAM', 'UPDATE_TEAM', 'DELETE_TEAM', 'TRANSFER_TEAM_OWNERSHIP', 'CREATE_LICENSE', 'UPDATE_LICENSE', 'DELETE_LICENSE', 'CREATE_CUSTOMER', 'UPDATE_CUSTOMER', 'DELETE_CUSTOMER', 'CREATE_PRODUCT', 'UPDATE_PRODUCT', 'DELETE_PRODUCT', 'INVITE_MEMBER', 'KICK_MEMBER', 'CANCEL_INVITATION', 'ACCEPT_INVITATION', 'RESET_PUBLIC_KEY', 'UPDATE_TEAM_SETTINGS', 'UPDATE_TEAM_PICTURE', 'DELETE_TEAM_PICTURE', 'CREATE_BLACKLIST', 'DELETE_BLACKLIST', 'UPDATE_BLACKLIST', 'CREATE_API_KEY', 'DELETE_API_KEY', 'SET_STRIPE_INTEGRATION', 'DELETE_STRIPE_INTEGRATION', 'SET_DISCORD_INTEGRATION', 'DELETE_DISCORD_INTEGRATION', 'CREATE_RELEASE', 'UPDATE_RELEASE', 'DELETE_RELEASE', 'SET_LATEST_RELEASE', 'UPDATE_EMAIL_PICTURE', 'DELETE_EMAIL_PICTURE', 'SET_BUILT_BY_BIT_INTEGRATION', 'DELETE_BUILT_BY_BIT_INTEGRATION', 'SET_POLYMART_INTEGRATION', 'DELETE_POLYMART_INTEGRATION', 'CREATE_BRANCH', 'UPDATE_BRANCH', 'DELETE_BRANCH', 'SET_BUILT_BY_BIT_PLACEHOLDER', 'SET_POLYMART_PLACEHOLDER');

-- Convert to the final clean enum type
ALTER TABLE "AuditLog" ALTER COLUMN "action" TYPE "AuditLogAction_final" USING ("action"::text::"AuditLogAction_final");

-- First rename the old enum to something we'll drop
ALTER TYPE "AuditLogAction" RENAME TO "AuditLogAction_to_drop";

-- Then rename the final enum to the official name
ALTER TYPE "AuditLogAction_final" RENAME TO "AuditLogAction";

-- Drop all the temporary enums
DROP TYPE "AuditLogAction_new";
DROP TYPE "AuditLogAction_to_drop";
COMMIT;

-- AlterTable
-- Add source column without NOT NULL constraint initially
ALTER TABLE "AuditLog" ADD COLUMN "source" "AuditLogSource";

-- Populate the source column based on system field
UPDATE "AuditLog" SET "source" = 'API_KEY' WHERE "system" = TRUE;
UPDATE "AuditLog" SET "source" = 'DASHBOARD' WHERE "system" = FALSE OR "system" IS NULL;

-- Now make the source column non-nullable
ALTER TABLE "AuditLog" ALTER COLUMN "source" SET NOT NULL;

-- Drop the system column
ALTER TABLE "AuditLog" DROP COLUMN "system";
