{
  "/api/v1/client/teams/{teamId}/verification/verify": {
    "post": {
      "summary": "Verify license",
      "deprecated": false,
      "description": "This endpoint is used to validate a license key with the Lukittu backend. Typically, you should call this endpoint when your software starts and act based on the response provided.\n\nImportant Note: If you are using a programming language that supports loading business logic code remotely (e.g., Java with a Remote ClassLoader), you should not use this endpoint. Instead, use the \"classloader\" endpoint for enhanced security.",
      "tags": ["Client"],
      "parameters": [
        {
          "name": "teamId",
          "in": "path",
          "description": "Your team's UUID. You can find this value in your team's settings on the Lukittu dashboard. Format: UUID v4.",
          "required": true,
          "example": "{{$string.uuid}}",
          "schema": {
            "type": "string"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "licenseKey": {
                  "type": "string",
                  "pattern": "^[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}$",
                  "description": "The Lukittu license key. Lukittu license keys always follow this format: XXXXX-XXXXX-XXXXX-XXXXX-XXXXX where X is an uppercase letter (A-Z) or a digit (1-9)."
                },
                "customerId": {
                  "type": "string",
                  "description": "The customer's UUID (UUID v4). This parameter is useful when a license key is shared among multiple customers, as it allows you to identify individual customers. Note: If strict customers are enabled in your team settings and the license has at least one customer attached, you must provide this value.",
                  "format": "uuid"
                },
                "productId": {
                  "type": "string",
                  "description": "The product's UUID (UUID v4). This binds the license key to a specific Lukittu product. Note: If strict products are enabled in your team settings and the license has at least one product attached, you must provide this value.",
                  "format": "uuid"
                },
                "challenge": {
                  "type": "string",
                  "description": "A client-generated random string used to prevent request interception. The Lukittu backend signs this challenge with its RSA private key. You can then validate the challenge using the corresponding public key. Recommendation: Always use a challenge for enhanced security, though it is not strictly required.",
                  "maxLength": 1000,
                  "pattern": "^[A-Za-z0-9]+$"
                },
                "version": {
                  "type": "string",
                  "description": "The version number of your Lukittu product. Useful for tracking which product releases are actively being used. Version must not contain spaces and must be between 3 and 255 characters.",
                  "minLength": 3,
                  "maxLength": 255,
                  "pattern": "^[A-Za-z0-9]+$"
                },
                "deviceIdentifier": {
                  "type": "string",
                  "description": "A unique identifier for the client device. Typically a hardware ID or another identifier that remains consistent across sessions. Device identifier must not contain spaces and must be between 10 and 1000 characters.",
                  "minLength": 10,
                  "maxLength": 1000,
                  "pattern": "^[A-Za-z0-9]+$"
                },
                "branch": {
                  "type": "string",
                  "description": "The branch name of your product. This allows targeting specific release branches. Branch name must contain only letters, numbers, dashes, and underscores.",
                  "minLength": 2,
                  "maxLength": 255,
                  "pattern": "^[a-zA-Z0-9_-]+$"
                }
              },
              "required": ["licenseKey"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful license verification response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "The returned data depends on your ReturnedFields configuration in team settings. Fields will only be included if they are enabled in your settings.",
                    "properties": {
                      "license": {
                        "type": "object",
                        "description": "License details if enabled in ReturnedFields configuration",
                        "properties": {
                          "ipLimit": {
                            "type": "integer",
                            "nullable": true,
                            "description": "Maximum number of different IP addresses that can use this license"
                          },
                          "seats": {
                            "type": "integer",
                            "nullable": true,
                            "description": "Maximum number of concurrent devices that can use this license"
                          },
                          "expirationType": {
                            "type": "string",
                            "enum": ["NEVER", "DATE", "DURATION"],
                            "description": "Defines how the license expiration is calculated"
                          },
                          "expirationStart": {
                            "type": "string",
                            "enum": ["CREATION", "ACTIVATION"],
                            "description": "Defines when the license expiration countdown begins"
                          },
                          "expirationDate": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "description": "Date when the license expires, if expirationType is DATE"
                          },
                          "expirationDays": {
                            "type": "integer",
                            "nullable": true,
                            "description": "Number of days until license expiration, if expirationType is DURATION"
                          },
                          "metadata": {
                            "type": "array",
                            "description": "License metadata - only includes keys that are allowed in ReturnedFields",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "customers": {
                        "type": "array",
                        "description": "Customer details if enabled in ReturnedFields configuration",
                        "items": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "format": "email",
                              "description": "Customer email address"
                            },
                            "fullName": {
                              "type": "string",
                              "description": "Customer full name"
                            },
                            "username": {
                              "type": "string",
                              "description": "Customer username"
                            },
                            "metadata": {
                              "type": "array",
                              "description": "Customer metadata - only includes keys that are allowed in ReturnedFields",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "products": {
                        "type": "array",
                        "description": "Product details if enabled in ReturnedFields configuration",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Product name"
                            },
                            "url": {
                              "type": "string",
                              "description": "Product URL"
                            },
                            "latestRelease": {
                              "type": "object",
                              "description": "Information about the latest release for this product",
                              "properties": {
                                "version": {
                                  "type": "string",
                                  "description": "Latest release version"
                                },
                                "createdAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "When the release was created"
                                }
                              }
                            },
                            "metadata": {
                              "type": "array",
                              "description": "Product metadata - only includes keys that are allowed in ReturnedFields",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "nullable": true
                  },
                  "result": {
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "valid": {
                        "type": "boolean"
                      },
                      "details": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": ["VALID"]
                      },
                      "challengeResponse": {
                        "type": "string",
                        "description": "Present if challenge was given"
                      }
                    },
                    "required": ["timestamp", "valid", "details", "code"]
                  }
                },
                "required": ["data", "result"]
              }
            }
          }
        },
        "400": {
          "description": "Bad request or validation error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Additional data related to the error",
                    "nullable": true
                  },
                  "result": {
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time when the error occurred"
                      },
                      "valid": {
                        "type": "boolean",
                        "description": "Always false for error responses"
                      },
                      "details": {
                        "type": "string",
                        "description": "Detailed error message"
                      },
                      "code": {
                        "type": "string",
                        "description": "Error code indicating the specific issue",
                        "enum": [
                          "BAD_REQUEST",
                          "RATE_LIMIT",
                          "TEAM_NOT_FOUND",
                          "FORBIDDEN",
                          "LICENSE_NOT_FOUND",
                          "PRODUCT_NOT_FOUND",
                          "RELEASE_NOT_FOUND",
                          "CUSTOMER_NOT_FOUND",
                          "LICENSE_SUSPENDED",
                          "IP_LIMIT_REACHED",
                          "INTERNAL_SERVER_ERROR"
                        ]
                      }
                    },
                    "required": ["timestamp", "valid", "details", "code"]
                  }
                },
                "required": ["result"]
              },
              "examples": {
                "bad-request": {
                  "value": {
                    "data": null,
                    "result": {
                      "timestamp": "2023-09-15T14:30:00Z",
                      "valid": false,
                      "details": "The request was malformed or missing required parameters.",
                      "code": "BAD_REQUEST"
                    }
                  }
                },
                "license-not-found": {
                  "value": {
                    "data": null,
                    "result": {
                      "timestamp": "2023-09-15T14:30:00Z",
                      "valid": false,
                      "details": "License not found",
                      "code": "LICENSE_NOT_FOUND"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "security": []
    }
  },
  "/api/v1/client/teams/{teamId}/verification/heartbeat": {
    "post": {
      "summary": "License Heartbeat",
      "deprecated": false,
      "description": "The Heartbeat endpoint is used to determine whether a specific device is still active. You should call this endpoint at regular intervals (e.g., once every 30 minutes). This process also validates the license key in a similar way to the Verify License endpoint.",
      "tags": ["Client"],
      "parameters": [
        {
          "name": "teamId",
          "in": "path",
          "description": "Your team's UUID. You can find this value in your team's settings on the Lukittu dashboard. Format: UUID v4.",
          "required": true,
          "example": "{{$string.uuid}}",
          "schema": {
            "type": "string"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "licenseKey": {
                  "type": "string",
                  "pattern": "^[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}$",
                  "description": "The Lukittu license key. Lukittu license keys always follow this format: XXXXX-XXXXX-XXXXX-XXXXX-XXXXX where X is an uppercase letter (A-Z) or a digit (1-9)."
                },
                "customerId": {
                  "type": "string",
                  "description": "The customer's UUID (UUID v4). This parameter is useful when a license key is shared among multiple customers, as it allows you to identify individual customers. Note: If strict customers are enabled in your team settings and the license has at least one customer attached, you must provide this value.",
                  "format": "uuid"
                },
                "productId": {
                  "type": "string",
                  "description": "The product's UUID (UUID v4). This binds the license key to a specific Lukittu product. Note: If strict products are enabled in your team settings and the license has at least one product attached, you must provide this value.",
                  "format": "uuid"
                },
                "challenge": {
                  "type": "string",
                  "description": "A client-generated random string used to prevent request interception. The Lukittu backend signs this challenge with its RSA private key. You can then validate the challenge using the corresponding public key. Recommendation: Always use a challenge for enhanced security, though it is not strictly required.",
                  "maxLength": 1000,
                  "pattern": "^[A-Za-z0-9]+$"
                },
                "version": {
                  "type": "string",
                  "description": "The version number of your Lukittu product. Useful for tracking which product releases are actively being used. Version must not contain spaces and must be between 3 and 255 characters.",
                  "minLength": 3,
                  "maxLength": 255,
                  "pattern": "^[A-Za-z0-9]+$"
                },
                "deviceIdentifier": {
                  "type": "string",
                  "description": "A unique identifier for the client device. Typically a hardware ID or another identifier that remains consistent across sessions. Device identifier must not contain spaces and must be between 10 and 1000 characters.",
                  "minLength": 10,
                  "maxLength": 1000,
                  "pattern": "^[A-Za-z0-9]+$"
                },
                "branch": {
                  "type": "string",
                  "description": "The branch name of your product. This allows targeting specific release branches. Branch name must contain only letters, numbers, dashes, and underscores.",
                  "minLength": 2,
                  "maxLength": 255,
                  "pattern": "^[a-zA-Z0-9_-]+$"
                }
              },
              "required": ["licenseKey", "deviceIdentifier"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful heartbeat response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "The returned data depends on your ReturnedFields configuration in team settings. Fields will only be included if they are enabled in your settings.",
                    "properties": {
                      "license": {
                        "type": "object",
                        "description": "License details if enabled in ReturnedFields configuration",
                        "properties": {
                          "ipLimit": {
                            "type": "integer",
                            "nullable": true,
                            "description": "Maximum number of different IP addresses that can use this license"
                          },
                          "seats": {
                            "type": "integer",
                            "nullable": true,
                            "description": "Maximum number of concurrent devices that can use this license"
                          },
                          "expirationType": {
                            "type": "string",
                            "enum": ["NEVER", "DATE", "DURATION"],
                            "description": "Defines how the license expiration is calculated"
                          },
                          "expirationStart": {
                            "type": "string",
                            "enum": ["CREATION", "ACTIVATION"],
                            "description": "Defines when the license expiration countdown begins"
                          },
                          "expirationDate": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "description": "Date when the license expires, if expirationType is DATE"
                          },
                          "expirationDays": {
                            "type": "integer",
                            "nullable": true,
                            "description": "Number of days until license expiration, if expirationType is DURATION"
                          },
                          "metadata": {
                            "type": "array",
                            "description": "License metadata - only includes keys that are allowed in ReturnedFields",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "customers": {
                        "type": "array",
                        "description": "Customer details if enabled in ReturnedFields configuration",
                        "items": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "format": "email",
                              "description": "Customer email address"
                            },
                            "fullName": {
                              "type": "string",
                              "description": "Customer full name"
                            },
                            "username": {
                              "type": "string",
                              "description": "Customer username"
                            },
                            "metadata": {
                              "type": "array",
                              "description": "Customer metadata - only includes keys that are allowed in ReturnedFields",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "products": {
                        "type": "array",
                        "description": "Product details if enabled in ReturnedFields configuration",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Product name"
                            },
                            "url": {
                              "type": "string",
                              "description": "Product URL"
                            },
                            "latestRelease": {
                              "type": "object",
                              "description": "Information about the latest release for this product",
                              "properties": {
                                "version": {
                                  "type": "string",
                                  "description": "Latest release version"
                                },
                                "createdAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "When the release was created"
                                }
                              }
                            },
                            "metadata": {
                              "type": "array",
                              "description": "Product metadata - only includes keys that are allowed in ReturnedFields",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "nullable": true
                  },
                  "result": {
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "valid": {
                        "type": "boolean"
                      },
                      "details": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": ["VALID"]
                      },
                      "challengeResponse": {
                        "type": "string",
                        "description": "Present if challenge was given"
                      }
                    },
                    "required": ["timestamp", "valid", "details", "code"]
                  }
                },
                "required": ["data", "result"]
              }
            }
          }
        },
        "400": {
          "description": "Bad request or validation error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Additional data related to the error",
                    "nullable": true
                  },
                  "result": {
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time when the error occurred"
                      },
                      "valid": {
                        "type": "boolean",
                        "description": "Always false for error responses"
                      },
                      "details": {
                        "type": "string",
                        "description": "Detailed error message"
                      },
                      "code": {
                        "type": "string",
                        "description": "Error code indicating the specific issue",
                        "enum": [
                          "BAD_REQUEST",
                          "RATE_LIMIT",
                          "TEAM_NOT_FOUND",
                          "FORBIDDEN",
                          "LICENSE_NOT_FOUND",
                          "PRODUCT_NOT_FOUND",
                          "RELEASE_NOT_FOUND",
                          "CUSTOMER_NOT_FOUND",
                          "LICENSE_SUSPENDED",
                          "IP_LIMIT_REACHED",
                          "INTERNAL_SERVER_ERROR"
                        ]
                      }
                    },
                    "required": ["timestamp", "valid", "details", "code"]
                  }
                },
                "required": ["result"]
              },
              "examples": {
                "bad-request": {
                  "value": {
                    "data": null,
                    "result": {
                      "timestamp": "2023-09-15T14:30:00Z",
                      "valid": false,
                      "details": "The request was malformed or missing required parameters.",
                      "code": "BAD_REQUEST"
                    }
                  }
                },
                "license-not-found": {
                  "value": {
                    "data": null,
                    "result": {
                      "timestamp": "2023-09-15T14:30:00Z",
                      "valid": false,
                      "details": "License not found",
                      "code": "LICENSE_NOT_FOUND"
                    }
                  }
                },
                "rate-limit": {
                  "value": {
                    "data": null,
                    "result": {
                      "timestamp": "2023-09-15T14:30:00Z",
                      "valid": false,
                      "details": "Rate limited",
                      "code": "RATE_LIMIT"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "security": []
    }
  },
  "/api/v1/client/teams/{teamId}/verification/classloader": {
    "get": {
      "summary": "Download Release",
      "deprecated": false,
      "description": "The Classloader endpoint is used to download a release file. It is primarily intended for programming languages that support loading business logic code directly from a remote server into memory. For example, this is commonly used with Java classloaders.",
      "tags": ["Client"],
      "parameters": [
        {
          "name": "teamId",
          "in": "path",
          "description": "Your team's UUID. You can find this value in your team's settings on the Lukittu dashboard. Format: UUID v4.",
          "required": true,
          "example": "{{$string.uuid}}",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "licenseKey",
          "in": "query",
          "description": "The Lukittu license key. Lukittu license keys always follow this format: XXXXX-XXXXX-XXXXX-XXXXX-XXXXX where X is an uppercase letter (A-Z) or a digit (1-9).",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "^[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}$"
          }
        },
        {
          "name": "productId",
          "in": "query",
          "description": "The product's UUID (UUID v4). This binds the license key to a specific Lukittu product. Note: If strict products are enabled in your team settings and the license has at least one product attached, you must provide this value.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "sessionKey",
          "in": "query",
          "description": "A unique identifier for the session, usually a randomly generated string. The session key is sent in an encrypted format to the Lukittu backend, using the client's RSA public key for encryption. The Lukittu backend decrypts the session key and uses it to encrypt the release file. The client retains the original session key, which is used to decrypt the file content. Session key must not contain spaces and must be between 10 and 1000 characters.",
          "required": true,
          "schema": {
            "type": "string",
            "minLength": 10,
            "maxLength": 1000,
            "pattern": "^[A-Za-z0-9]+$"
          }
        },
        {
          "name": "deviceIdentifier",
          "in": "query",
          "description": "A unique identifier for the client device. Typically a hardware ID or another identifier that remains consistent across sessions. Device identifier must not contain spaces and must be between 10 and 1000 characters.",
          "required": true,
          "schema": {
            "type": "string",
            "minLength": 10,
            "maxLength": 1000,
            "pattern": "^[A-Za-z0-9]+$"
          }
        },
        {
          "name": "version",
          "in": "query",
          "description": "The version number of your Lukittu product. Useful for tracking which product releases are actively being used. Version must not contain spaces and must be between 3 and 255 characters.",
          "required": false,
          "schema": {
            "type": "string",
            "minLength": 3,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9]+$"
          }
        },
        {
          "name": "customerId",
          "in": "query",
          "description": "The customer's UUID (UUID v4). This parameter is useful when a license key is shared among multiple customers, as it allows you to identify individual customers. Note: If strict customers are enabled in your team settings and the license has at least one customer attached, you must provide this value.",
          "required": false,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "branch",
          "in": "query",
          "description": "The branch name of your product. This allows targeting specific release branches. Branch name must contain only letters, numbers, dashes, and underscores.",
          "required": false,
          "schema": {
            "type": "string",
            "minLength": 2,
            "maxLength": 255,
            "pattern": "^[a-zA-Z0-9_-]+$"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful response with file download",
          "headers": {
            "Content-Type": {
              "description": "The MIME type of the file",
              "schema": {
                "type": "string",
                "example": "application/octet-stream"
              }
            },
            "X-File-Size": {
              "description": "Size of the file in bytes",
              "schema": {
                "type": "string"
              }
            },
            "X-Product-Name": {
              "description": "Name of the product",
              "schema": {
                "type": "string"
              }
            },
            "X-Release-Status": {
              "description": "Status of the release (e.g., PUBLISHED, DRAFT, ARCHIVED, DEPRECATED)",
              "schema": {
                "type": "string"
              }
            },
            "X-Release-Created-At": {
              "description": "Creation date of the release",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            "X-File-Created-At": {
              "description": "Creation date of the file",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            "X-Version": {
              "description": "Version of the release being downloaded",
              "schema": {
                "type": "string"
              }
            },
            "X-Latest-Version": {
              "description": "Latest version available (may differ from downloaded version)",
              "schema": {
                "type": "string"
              }
            },
            "X-Lukittu-Version": {
              "description": "Version of the Lukittu platform",
              "schema": {
                "type": "string"
              }
            },
            "X-Main-Class": {
              "description": "Main class name for Java JAR files",
              "schema": {
                "type": "string"
              }
            }
          },
          "content": {}
        },
        "400": {
          "description": "Bad request or validation error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Additional data related to the error",
                    "nullable": true
                  },
                  "result": {
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time when the error occurred"
                      },
                      "valid": {
                        "type": "boolean",
                        "description": "Always false for error responses"
                      },
                      "details": {
                        "type": "string",
                        "description": "Detailed error message"
                      },
                      "code": {
                        "type": "string",
                        "description": "Error code indicating the specific issue",
                        "enum": [
                          "BAD_REQUEST",
                          "RATE_LIMIT",
                          "TEAM_NOT_FOUND",
                          "FORBIDDEN",
                          "INVALID_SESSION_KEY",
                          "LICENSE_NOT_FOUND",
                          "PRODUCT_NOT_FOUND",
                          "RELEASE_NOT_FOUND",
                          "RELEASE_ARCHIVED",
                          "RELEASE_DRAFT",
                          "NO_ACCESS_TO_RELEASE",
                          "CUSTOMER_NOT_FOUND",
                          "LICENSE_SUSPENDED",
                          "IP_LIMIT_REACHED",
                          "INTERNAL_SERVER_ERROR"
                        ]
                      }
                    },
                    "required": ["timestamp", "valid", "details", "code"]
                  }
                },
                "required": ["result"]
              },
              "examples": {
                "bad-request": {
                  "value": {
                    "data": null,
                    "result": {
                      "timestamp": "2023-09-15T14:30:00Z",
                      "valid": false,
                      "details": "The request was malformed or missing required parameters.",
                      "code": "BAD_REQUEST"
                    }
                  }
                },
                "license-not-found": {
                  "value": {
                    "data": null,
                    "result": {
                      "timestamp": "2023-09-15T14:30:00Z",
                      "valid": false,
                      "details": "No valid license found for the requested product.",
                      "code": "LICENSE_NOT_FOUND"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "security": []
    }
  }
}
